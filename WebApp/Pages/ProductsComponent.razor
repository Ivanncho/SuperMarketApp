@page "/products"

@inject NavigationManager NavigationManager
@inject UseCases.IViewProductsUseCase ViewProductsUseCase
@inject UseCases.IGetCategoryByIdUseCase GetCategoryByIdUseCase

<h3>Products</h3>
<br />
@if(products != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Product Category</th>
                            <th>Product Name</th>
                            <th>Product Qty</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var product in products)
                            {
                                <tr>
                                    <td>@product.ProductId</td>
                                    <td>@GetCategoryByIdUseCase.Execute(product.CategoryId.Value)?.Name</td>
                                    <td>@product.Name</td>
                                    <td>@product.Quantity</td>
                                    <td>@(Math.Round(product.Price.Value,2))</td>
                                </tr>
                            }   
                    </tbody>
                </table>
            }
<br />
<button type="button" @onclick="OnClickAddProduct" class="btn btn-primary">Add Product</button>



@code {
    private IEnumerable<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        products = ViewProductsUseCase.Execute();
    }
    private void OnClickAddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }
}
