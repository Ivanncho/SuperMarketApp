@page "/cashier_console"
@attribute [Authorize(policy: "CashierOnly")]

@if (!string.IsNullOrWhiteSpace(cashierName))
{
    <div class="row">
        <div class="col-7">
            <h3>Cashier's Console</h3>
        </div>
        <div class="col-2">
            <label for="cashier">Cashier Name:</label>
        </div>
        <div class="col-3">
            <div class="form-group">
                <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-4">
            <SelectProductForSelling OnProductSelected="SelectProduct"></SelectProductForSelling>
            <br />
            <SellProductComponent CashierName="@cashierName"
                                  SelectedProduct="selectProduct"
                                  OnProductSold="SellProduct"></SellProductComponent>
        </div>
        <div class="col">
            <TodayTransactionComponent @ref="transactionComponent"></TodayTransactionComponent>
        </div>
    </div>  
}

@code{
    private TodayTransactionComponent transactionComponent;

    private Product selectProduct;
    private string cashierName;

    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }

    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        cashierName = authState.User.Identity.Name;

    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            transactionComponent.LoadTransactions(cashierName);
        }
    }

    private void SelectProduct(Product product)
    {
        selectProduct = product;
    }
    private void SellProduct(Product product)
    {
        transactionComponent.LoadTransactions(cashierName);
    }
}